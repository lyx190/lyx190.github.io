<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ReID on Yuxiang Lin</title>
    <link>https://lyx190.github.io/tags/reid/</link>
    <description>Recent content in ReID on Yuxiang Lin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Aug 2019 17:05:00 +0800</lastBuildDate>
    
	<atom:link href="https://lyx190.github.io/tags/reid/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于ReID中的identification loss训练采样策略思考</title>
      <link>https://lyx190.github.io/reid/randomidentificationsampler/</link>
      <pubDate>Mon, 19 Aug 2019 17:05:00 +0800</pubDate>
      
      <guid>https://lyx190.github.io/reid/randomidentificationsampler/</guid>
      <description>关于ReID中的Identification Loss训练采样策略思考 在ReID的任务中，由于 triplet loss 需要的采样策略是每个 ID 要有固定的样本数量，比如 4 或者 8，这样就意味着假如 batch_size 为 64，num_instance 为4，则此时的 minibatch 中就有 16 个 ID 的样本，每个 ID 包含 4 个样本数。训练集中如果有的ID对应的样本数达不到 4 的话，则重复采样或者放弃该 ID 。这就会导致数据集中并不是所有的样本都被利用到训练中，例如在 Market-1501 中 traning dataset 有 751 个 ID ，12936 张图片。如上的设置，则训练的时候每个 epoch 只有 735 个 ID ,即 2944 张图片被用到。
而如果用 softmax 训练样本的话，需要的采样策略是尽量多的ID的图片，每个 epoch 会用到所有的图片进行训练。
在最近的实验中，Market-1501 上运用纯 softmax 训练 PCB 网络，分别用两个采样策略得到的效果差很大，Rank-1 分别为 92.2% 与 90.0%。
这样的话在 softmax 与 triplet loss 联合训练的时候就很有可能出现两种 loss 都互相受制于各自的采样策略从而训练不好的问题。在论文 Pyramidal Person Re-Identification via Multi-Loss Dynamic Training 中就提到了这一问题，论文的解决办法是先用滑动平均的方法计算两个 loss 的下降程度，据此在训练的时候在线调整 sampling 的策略。</description>
    </item>
    
  </channel>
</rss>